{
  "GET /api": {
    "description": "serves up a json representation of all the available endpoints of the api"
  },
  "POST api/users": {
    "description": "adds a user and returns new user info",
    "exampleBody": {
      "username": "steve",
      "password": "steve",
      "realname": "steve",
      "email": "steve@stevemail.steve",
      "age": 42,
      "phone_num": "78383783839"
    },
    "exampleResponse": {
      "user": {
        "username": "steve",
        "realname": "steve",
        "email": "steve@stevemail.steve",
        "age": 42,
        "phone_num": "78383783839",
        "created_at": "Timestamp"
      }
    }
  },
  "GET api/users/:username": {
    "description": "returns user info on endpoint of username",
    "exampleResponse": {
      "user": {
        "username": "steve",
        "realname": "steve",
        "email": "steve@stevemail.steve",
        "age": 42,
        "phone_num": "78383783839"
      }
    }
  },
  "PATCH api/users/:username": {
    "description": "updates either phone number or email address of user by username",
    "exampleBody": { "phone_num": "78383783839" },
    "exampleResponse": {
      "user": {
        "username": "steve",
        "realname": "steve",
        "email": "steve@stevemail.steve",
        "age": 42,
        "phone_num": "78383783839"
      }
    }
  },
  "GET api/vendors": {
    "description": "returns an array of all vendor details",
    "exampleResponse": { "vendors": ["array of vendors"] }
  },
  "POST api/vendors": {
    "description": "adds a new vendor and returns the added vendor",
    "exampleBody": {
      "vendor": {
        "username": "steve",
        "cuisine": "steve food",
        "location": "56.342202, -2.794841",
        "opening_times": "9-5",
        "password": "password",
        "ownername": "steve",
        "email": "steve@stevemail.steve",
        "phone_num": "78383783839"
      }
    },
    "exampleResponse": {
      "vendor": {
        "username": "steve",
        "cuisine": "steve food",
        "location": "56.342202, -2.794841",
        "opening_times": "9-5",
        "ownername": "steve",
        "email": "steve@stevemail.steve",
        "phone_num": "78383783839",
        "created_at": "Timestamp"
      }
    }
  },
  "GET api/vendors/:username": {
    "description": "gets specific vendor info by username, returning an object with key of vendor and value of vendor object",
    "exampleResponse": {
      "vendor": {
        "username": "oppri",
        "ownername": "steve prime",
        "cuisine": "steak house",
        "location": "53.796329, -1.542809",
        "opening_times": "9am - 9pm",
        "open_status": false,
        "menu": "https://d1csarkz8obe9u.cloudfront.net/posterpreviews/menu-flyer-template-5632286b490608db0301a085b91cde86_screen.jpg?ts=1561491978",
        "businessname": "Steves steaks",
        "phone_num": "01602 616666",
        "email": "steakysteve@gmail.com"
      }
    }
  },
  "PATCH api/vendors/:username": {
    "description": "updates vendor by username and by key on body. Available patches are location, open_status and menu",
    "exampleBody": { "location": "56.342202, -2.794841" },
    "exampleResponse": {
      "vendor": {
        "username": "oppri",
        "ownername": "steve prime",
        "cuisine": "steak house",
        "location": "53.796329, -1.542809",
        "opening_times": "9am - 9pm",
        "open_status": false,
        "menu": "https://d1csarkz8obe9u.cloudfront.net/posterpreviews/menu-flyer-template-5632286b490608db0301a085b91cde86_screen.jpg?ts=1561491978",
        "businessname": "Steves steaks",
        "phone_num": "01602 616666",
        "email": "steakysteve@gmail.com"
      }
    }
  },
  "POST api/login/users": {
    "description": "takes username and password and checks both against stored information in database, returns validated or rejects with 404/400",
    "exampleBody": {
      "username": "steve",
      "password": "stevespassword"
    },
    "exampleResponse": {
      "msg": "Verified"
    }
  },
  "POST api/login/vendors": {
    "description": "takes username and password and checks both against stored information in database, returns validated or rejects with 404/400",
    "exampleBody": {
      "username": "steve",
      "password": "stevespassword"
    },
    "exampleResponse": {
      "msg": "Verified"
    }
  },
  "GET api/vendors/:username/menu": {
    "description": "returns an array on key of menu_items for the given vendor by username",
    "exampleResponse": {
      "menu_items": [
        {
          "menu_item_id": 9,
          "username": "frankgrimes",
          "name": "Badass Brisket Sandwich",
          "price": "8.00",
          "description": "Genuine Texas recipe beef brisket with a bangin' peppery flavour",
          "allergens": null,
          "vegetarian": false,
          "vegan": false,
          "gluten_free": false,
          "available": true
        },
        {
          "menu_item_id": 10,
          "username": "frankgrimes",
          "name": "Memphis Hog Butt Sandwich",
          "price": "7.00",
          "description": "Memphis smoked hog butt, the original pulled pork. All served in a pretzel roll, with house BBQ sauce and slaw",
          "allergens": null,
          "vegetarian": false,
          "vegan": false,
          "gluten_free": false,
          "available": true
        }
      ]
    }
  },
  "PATCH api/vendors/:username/menu/:menu_item": {
    "description": "takes a patch request of either price/description/allergen/vegetarian/vegan/gluten_free/availble and returns the updated menu item on a key of menu_item",
    "exampleBody": {
      "available": false
    },
    "exampleResponse": {
      "menu_item": {
        "menu_item_id": 3,
        "username": "oppri",
        "name": "Fillet 8oz",
        "price": "24.85",
        "description": "The most tender steak regarded by many as the premium cut, recommended rare.",
        "allergens": null,
        "vegetarian": false,
        "vegan": false,
        "gluten_free": true,
        "available": false
      }
    }
  }
}
